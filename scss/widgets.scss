@use "sass:color";
@use "scheme";
@use "lib";
@use "font";

separator,
.separator {
    @include lib.rounded(2);

    min-width: lib.s(0.5);
    min-height: lib.s(0.5);
}

@keyframes appear {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@mixin -appear($duration: 100ms) {
    animation-name: appear;
    animation-duration: $duration;
    animation-timing-function: ease-out;
    animation-iteration-count: 1;
}

menu {
    @include -appear;
    @include lib.rounded(10);
    @include lib.border(scheme.$blue, 0.4);
    @include font.mono;

    padding: lib.s(8);
    background-color: scheme.$surface0;
    color: scheme.$text;
    font-size: lib.s(14);

    & > menuitem {
        @include lib.element-decel;
        @include lib.rounded(8);

        padding: lib.s(5) lib.s(8);

        &:hover,
        &:focus {
            background-color: scheme.$surface1;
        }

        &:active {
            background-color: scheme.$surface2;
        }

        &:disabled {
            color: scheme.$subtext0;
        }

        & > arrow {
            @include lib.rounded(1000);

            min-width: lib.s(5);
            min-height: lib.s(5);
            background-color: scheme.$blue;

            &.right {
                margin-left: lib.s(12);
            }

            &.left {
                margin-right: lib.s(12);
            }
        }
    }

    & > separator {
        background-color: color.mix(scheme.$blue, scheme.$surface0, 70%);
        margin: lib.s(5) 0;
    }
}

tooltip,
.tooltip {
    @include lib.rounded(10);
    @include lib.border(scheme.$primary, 0.7);
    @include font.mono;

    background-color: scheme.$surface0;
    color: scheme.$text;
    padding: lib.s(5) lib.s(10);
}

tooltip {
    @include -appear(200ms);
}

.tooltip {
    @include lib.shadow;

    margin: lib.s(3);
}

scrollbar {
    slider {
        @include lib.rounded(1000);
        @include lib.element-decel;

        min-width: lib.s(3);
        min-height: lib.s(30);
        background-color: color.change(scheme.$overlay0, $alpha: 0.6);

        &:hover,
        &:focus {
            min-width: lib.s(6);
            background-color: color.change(scheme.$overlay0, $alpha: 0.7);
        }

        &:active {
            background-color: color.change(scheme.$overlay1, $alpha: 0.8);
        }
    }
}

popover {
    @include -appear;
    @include lib.rounded(10);
    @include lib.border(scheme.$yellow, 0.4);
    @include font.mono;

    padding: lib.s(8);
    background-color: color.mix(scheme.$base, scheme.$yellow, 90%);
    color: scheme.$text;
    font-size: lib.s(14);
}
